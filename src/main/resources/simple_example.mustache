with
settings as (
select 
coalesce(max(struct(branch,cast(value as boolean))).col2,false) as isInitial
 from odpp_dict.settings
where settings_key = 'acc_initial_loading'
  and validFrom = DATE'${bdate}'
  and nullif(branch,'${branch}') is null
)
,cf_deal as (
select
 d.contractid           as contractID
,t.dueDate              as paymentDate
,cast(t.typeID as int)  as cashFlowTypeid
,t.includeEIR           as isIncludedInAmortizedCost
,t.amount               as amount
,t.currency             as currency
,d.EventID              as eventID
,d.bdate
from odpp.cashflow t
join odpp.deal_tmp2 dt on dt.key = t.dealid and dt.bdate = t.bdate and dt.branch = t.branch
join odpp_acc.inevent_t d on d.contractid = dt.srcdealid and d.bdate = t.bdate and d.branch = t.branch
cross join settings
where t.bdate = '${bdate}' and t.branch = '${branch}'
  and case when settings.isInitial then t.duedate > t.bdate else t.duedate >= t.bdate end -- ODPP-802 (initial) -- ODPP-446 (others)
)
,cf_costp as (
-- ODPP-492
-- комиссионные платежи в график 
select 
 d.contractid   as contractID
,d.bdate        as paymentDate
,2              as cashFlowTypeid -- const
,'1'            as isIncludedInAmortizedCost -- const
,t.amount
,tr.currency    as currency
,d.EventID      as eventID
,d.bdate
from odpp.events t
join odpp_dict.event_trigger et on et.code = t.eventtrigger and t.bdate between et.validfrom and et.validto
join odpp.deal_tmp2 dt on dt.key = t.dealid and dt.bdate = t.bdate and dt.branch = t.branch
join odpp_acc.inevent_t d on d.contractid = dt.srcdealid and d.bdate = dt.bdate and d.branch = dt.branch
join odpp.transactions tr on tr.transactionID = t.eventObject and tr.bdate = t.bdate and tr.branch = t.branch
join odpp.deal_asset_acc_tmp da on da.dealid = t.dealid and da.accid = tr.creditid and da.bdate = t.bdate and da.branch = t.branch
where t.bdate = '${bdate}' and t.branch = '${branch}'
  and et.eventtype = 'CommissionRecognition' 
  and dt.srcmodule = 'BIS_LOA' -- только для BIS
  and da.balance > 0 -- пассив. остаток на счёте CommissionP (условие на попадание в график)
)
,cf_costa as (
-- ODPP-492
-- затраты по сделке в график 
select 
 d.contractid   as contractID
,t.bdate        as paymentDate
,4              as cashFlowTypeid -- const
,'1'            as isIncludedInAmortizedCost -- const
,t.amount
,tr.currency    as currency
,d.EventID      as eventID
,t.bdate
from odpp.events t
join odpp_dict.event_trigger et on et.code = t.eventtrigger and t.bdate between et.validfrom and et.validto
join odpp.deal_tmp2 dt on dt.key = t.dealid and dt.bdate = t.bdate and dt.branch = t.branch
join odpp_acc.inevent_t d on d.contractid = dt.srcdealid and d.bdate = dt.bdate and d.branch = dt.branch
join odpp.transactions tr on tr.transactionID = t.eventObject and tr.bdate = t.bdate and tr.branch = t.branch
join odpp.deal_asset_acc_tmp da on da.dealid = t.dealid and da.accid = tr.debitid and da.bdate = t.bdate and da.branch = t.branch
where t.bdate = '${bdate}' and t.branch = '${branch}'
  and et.eventtype = 'CostRecognition'
  and dt.srcmodule = 'BIS_LOA' -- только для BIS
  and da.balance < 0 -- актив. остаток на счёте CostA (условие на попадание в график)
)
,cf_premium as (
-- ODPP-548 цессии - поток Premium
select 
 t.contractID   as contractID
,t.bdate        as paymentDate
,5              as cashFlowTypeid -- const
,'1'            as isIncludedInAmortizedCost -- const
,(t.principal + coalesce(da.balance,0)) as amount -- актив с учётом знака - знак инвертируем
,d.currency     as currency
,t.EventID      as eventID
,t.bdate
from odpp.deal_tmp0 d
join odpp.deal_asset_acc_tmp da on da.bdate = d.bdate and da.branch = d.branch and da.dealID = d.key
join odpp_acc.incontract_t t on t.bdate = d.bdate and t.branch = d.branch and t.contractID = d.sourcedealID
join odpp_acc.inevent_t e on e.bdate = d.bdate and e.branch = d.branch and e.eventid = t.eventid and e.eventtypeid = 7 -- event InitialRecognition или initial loading
where d.bdate = '${bdate}' and d.branch = '${branch}'
  and d.ddcat = 'CE'
  and da.accountingclass = 'Principal'
  and (t.principal + coalesce(da.balance,0)) != 0
)
,cf_initial as (
-- ODPP-550 - cashflow для первоначальной загрузки
select 
 d.contractid
,d.bdate            as paymentDate
,case 
when accountingclass='Interest accrued' then 3   
when accountingclass='CommissionP' then 2
when accountingclass='CostsA' then 4
end                 as cashFlowTypeid
,'1'                as isIncludedInAmortizedCost
,sum(a.balance)     as amount
,min(a.currency)    as currency
,d.eventid
,d.bdate
from odpp_acc.inevent_t d
join settings on isInitial -- только при первоначальной загрузке
join odpp.deal_tmp2 dt on dt.srcdealid = d.contractid and dt.bdate = d.bdate and dt.branch = d.branch
join odpp.deal_asset_acc_tmp a on a.dealid = dt.key and a.bdate = d.bdate and a.branch = d.branch and a.accountingclass in ('CommissionP','CostsA','Interest accrued')
where d.bdate = '${bdate}' and d.branch = '${branch}'
group by d.contractid, d.eventid, a.accountingclass, d.bdate
having coalesce(sum(a.balance),0) != 0
)
,cf_total as (
select * from cf_deal
union all
select * from cf_costa
union all
select * from cf_costp
union all
select * from cf_premium
union all
select * from cf_initial
)
insert overwrite table odpp_acc.incashflow_t partition(bdate='${bdate}', branch='${branch}')
select
 cast(null as string)   as key
,cast((date_format(t.bdate,'yyMMdd')||'05000000000') as bigint) + row_number() over(order by t.contractID)
                        as CashFlowID
,t.contractID
,t.paymentDate
,t.cashFlowTypeid
,t.isIncludedInAmortizedCost
,t.amount
,if(t.currency='RUR','RUB',t.currency) as currency
,t.eventid
from cf_total t
;
